View(unique(mmap$borough))
View(unique(mmap$borough))
"Richmond" = "Richmond upon Thames")
mmap3 <- mmap3 %>% fct_recode(borough,
"Westminster" = City of Westminster",
mmap3 %>% fct_recode(borough,
"Westminster" = City of Westminster",
mmap3 <- mmap3$borough %>% fct_recode(borough,
"Westminster" = City of Westminster",
m3 <- mmap3 %>% fct_recode(borough,
"Westminster" = "City of Westminster",
"Kingston-Upon-Thames" = "Kingston Upon Thames",
"Kingston-Upon-Thames" = "Kingston upon Thames",
"Richmond" = "Richmond upon Thames")
# Replicate weapon column
mmap2 = cbind(mmap1, weapon2=rep(mmap1$weapon))
str(mmap2)
mmap3 <- mmap2 %>%
mutate(weapon = fct_recode(weapon,
"Other" = "Arson",
"Other" = "Other",
"Other" = "Vehicle",
"Other" = "Drug",
"Other" = "Poison",
"Other" = "Unknown",
"Other" = "Ligature",
"Knife" = "Knife",
"Gun" = "Gun",
"Other" = "Blunt Object",
"Assault" = "Assault"))
# See all levels in weapon
levels(mmap3$weapon)
m3 <- mmap3 %>% fct_recode(borough,
"Westminster" = "City of Westminster",
"Kingston-Upon-Thames" = "Kingston Upon Thames",
"Kingston-Upon-Thames" = "Kingston upon Thames",
"Richmond" = "Richmond upon Thames")
str(mmap3)
m3 <- mmap3 %>% fct_recode(borough,
"Westminster" = "City of Westminster",
"Kingston-Upon-Thames" = "Kingston Upon Thames",
"Kingston-Upon-Thames" = "Kingston upon Thames",
"Richmond" = "Richmond upon Thames"))
m3 <- mmap3 %>% mutate(borough = fct_recode(borough,
"Westminster" = "City of Westminster",
"Kingston-Upon-Thames" = "Kingston Upon Thames",
"Kingston-Upon-Thames" = "Kingston upon Thames",
"Richmond" = "Richmond upon Thames"))
levels(m3$borough)
m3 <- mmap3 %>% mutate(borough = fct_recode(borough,
"Westminster" = "City of Westminster",
"Kingston-Upon-Thames" = "Kingston Upon Thames",
"Kingston-Upon-Thames" = "Kingston upon Thames",
"Kingston-Upon-Thames" = "Kingston-upon-Thames",
"Richmond" = "Richmond upon Thames"))
levels(m3$borough)
mmap3 <- mmap3 %>% mutate(borough = fct_recode(borough,
"Westminster" = "City of Westminster",
"Kingston-Upon-Thames" = "Kingston Upon Thames",
"Kingston-Upon-Thames" = "Kingston upon Thames",
"Kingston-Upon-Thames" = "Kingston-upon-Thames",
"Richmond" = "Richmond upon Thames"))
levels(mmap3$borough)
mmap4 = cbind(mmap3, date2=rep(mmap3$date))
str(mmap4)
mmap5 = separate(mmap4, date2, c("year", "month", "day"), "-") %>%
mutate_if(is.character, as.integer)
str(mmap5)
mmap6 <- left_join(mmap5, boroughpop, by = "borough")
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% summarise(count = n(), population = population, percent_100K_population = count/population/100000)
View(mmap6_sum)
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% summarise(count = n(), population = population, percent_100K_population = count/population/100000) %>% distinct()
View(mmap6_sum)
View(mmap6)
levels(mmap3$borough)
mmap3 <- mmap3 %>% mutate(borough = fct_recode(borough,
"Westminster" = "City of Westminster",
"Kingston" = "Kingston Upon Thames",
"Kingston" = "Kingston upon Thames",
"Kingston" = "Kingston-upon-Thames",
"Kingston" = "Kingston-Upon-Thames",
"Richmond" = "Richmond upon Thames"))
levels(mmap3$borough)
mmap3 <- mmap3 %>% mutate(borough = fct_recode(borough,
"Westminster" = "City of Westminster",
"Kingston upon Thames" = "Kingston Upon Thames",
"Kingston upon Thames" = "Kingston upon Thames",
"Kingston upon Thames" = "Kingston-upon-Thames",
"Kingston upon Thames" = "Kingston-Upon-Thames",
"Richmond upon Thames" = "Richmond"))
levels(mmap3$borough)
mmap4 = cbind(mmap3, date2=rep(mmap3$date))
str(mmap4)
mmap5 = separate(mmap4, date2, c("year", "month", "day"), "-") %>%
mutate_if(is.character, as.integer)
str(mmap5)
mmap6 <- left_join(mmap5, boroughpop, by = "borough")
View(mmap6)
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% summarise(count = n(), population = population, percent_100K_population = count/population/100000) %>% distinct()
View(mmap6_sum)
levels(mmap3$borough)
mmap3 <- mmap3 %>% mutate(borough = fct_recode(borough,
"Westminster" = "City of Westminster",
"Kingston upon Thames" = "Kingston Upon Thames",
"Kingston upon Thames" = "Kingston upon Thames",
"Kingston upon Thames" = "Kingston-upon-Thames",
"Kingston upon Thames" = "Kingston-Upon-Thames",
"Richmond upon Thames" = "Richmond"))
levels(mmap3$borough)
m3 <- mmap3 %>% mutate(borough = fct_recode(borough,
"Westminster" = "City of Westminster",
"Kingston upon Thames" = "Kingston Upon Thames",
"Kingston upon Thames" = "Kingston upon Thames",
"Kingston upon Thames" = "Kingston-upon-Thames",
"Kingston upon Thames" = "Kingston-Upon-Thames",
"Richmond upon Thames" = "Richmond"))
levels(m3$borough)
mmap3 <- mmap3 %>% mutate(borough = fct_recode(borough,
"Westminster" = "City of Westminster",
"Kingston upon Thames" = "Kingston",
"Richmond upon Thames" = "Richmond"))
levels(mmap3$borough)
mmap4 = cbind(mmap3, date2=rep(mmap3$date))
str(mmap4)
mmap5 = separate(mmap4, date2, c("year", "month", "day"), "-") %>%
mutate_if(is.character, as.integer)
str(mmap5)
mmap6 <- left_join(mmap5, boroughpop, by = "borough")
View(mmap6)
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% summarise(count = n(), population = population, percent_100K_population = count/population/100000) %>% distinct()
View(mmap6_sum)
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% summarise(count = n(), population = population, rate_per_100K_population = count/population/100000) %>% distinct()
View(mmap6_sum)
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% summarise(count = n(), population = population, rate_per_100K = count/population/100000) %>% distinct()
View(mmap6_sum)
View(mmap6)
mmap7 <- mmap6 %>% filter(year != "2020")
View(mmap7)
ggplot(mmap7, aes(x = ageGroup, fill = sex)) +
geom_bar(stat='count', color = "black") +
scale_fill_brewer(palette = "Set1") +
facet_grid(.~sex)+
geom_label(stat = "count", aes(label = ..count..,y = ..count..), fill = "white") +
labs(x = "Age Group", y = "Number of Homicides", title = "Number of homicides in London by victim age group split by gender, 2008-2019")+
coord_flip()+
theme_bw()
ggplot(mmap7, aes(x = as.factor(year))) +
geom_bar(stat='count', fill = "green4", color = "black") +
geom_label(stat = "count", aes(label = ..count..,y = ..count..)) +
labs(x = "Calendar Year", y = "Number of Homicides", title = "Number of homicides in London by Year, 2008-2019")+
theme_bw()
ggplot(mmap8, aes(x = ageGroup, fill = sex)) +
geom_density_ridges(scale = 3) +
scale_fill_brewer(palette = "Set5") +
scale_y_discrete(expand = c(0, 3)) +     # will generally have to set the `expand` option
scale_x_continuous(expand = c(0, 0)) +   # for both axes to remove unneeded padding
coord_cartesian(clip = "off") + # to avoid clipping of the very top of the top ridgeline
theme_ridges()
ggplot(mmap7, aes(x = ageGroup, fill = sex)) +
geom_density_ridges(scale = 3) +
scale_y_discrete(expand = c(0, 3)) +     # will generally have to set the `expand` option
scale_x_continuous(expand = c(0, 0)) +   # for both axes to remove unneeded padding
coord_cartesian(clip = "off") + # to avoid clipping of the very top of the top ridgeline
theme_ridges()
ggplot(mmap7, aes(x = ageGroup, fill = sex)) +
geom_bar(stat='count', color = "black") +
scale_fill_brewer(palette = "Set1") +
facet_grid(.~sex)+
geom_label(stat = "count", aes(label = ..count..,y = ..count..), fill = "white") +
labs(x = "Age Group", y = "Number of Homicides", title = "Number of homicides in London by victim age group split by gender, 2008-2019")+
coord_flip()+
theme_bw()
ggplot(mmap8, aes(x = ageGroup, fill = sex)) +
geom_density_ridges(scale = 3) +
scale_y_continuous(expand = c(0, 3)) +     # will generally have to set the `expand` option
scale_x_discrete(expand = c(0, 0)) +   # for both axes to remove unneeded padding
coord_cartesian(clip = "off") + # to avoid clipping of the very top of the top ridgeline
theme_ridges()
ggplot(mmap8, aes(x = ageGroup, y = count, fill = sex)) +
geom_density_ridges(scale = 3) +
scale_y_continuous(expand = c(0, 3)) +     # will generally have to set the `expand` option
scale_x_discrete(expand = c(0, 0)) +   # for both axes to remove unneeded padding
coord_cartesian(clip = "off") + # to avoid clipping of the very top of the top ridgeline
theme_ridges()
ggplot(mmap7, aes(x = ageGroup, fill = sex)) +
geom_bar(stat='count', color = "black") +
scale_fill_brewer(palette = "Set1") +
facet_grid(sex~.)+
geom_label(stat = "count", aes(label = ..count..,y = ..count..), fill = "white") +
labs(x = "Age Group", y = "Number of Homicides", title = "Number of homicides in London by victim age group split by gender, 2008-2019")+
theme_bw()
ggplot(mmap8, aes(x = year,fill = sex)) +
geom_density_ridges(scale = 3) +
scale_y_continuous(expand = c(0, 3)) +     # will generally have to set the `expand` option
scale_x_discrete(expand = c(0, 0)) +   # for both axes to remove unneeded padding
coord_cartesian(clip = "off") + # to avoid clipping of the very top of the top ridgeline
theme_ridges()
ggplot(mmap8, aes(x = year,y=count, fill = sex)) +
geom_density_ridges(scale = 3) +
scale_y_discrete(expand = c(0, 3)) +     # will generally have to set the `expand` option
scale_x_discrete(expand = c(0, 0)) +   # for both axes to remove unneeded padding
coord_cartesian(clip = "off") + # to avoid clipping of the very top of the top ridgeline
theme_ridges()
ggplot(mmap5, aes(x = year, y = weapon, fill = weapon)) +
geom_density_ridges(scale = 3) +
scale_fill_brewer(palette = "Set5") +
scale_y_discrete(expand = c(0, 4)) +     # will generally have to set the `expand` option
scale_x_continuous(expand = c(0, 0)) +   # for both axes to remove unneeded padding
coord_cartesian(clip = "off") + # to avoid clipping of the very top of the top ridgeline
theme_ridges()
ggplot(mmap7, aes(x = as.factor(year))) +
geom_bar(stat='count', fill = "green4", color = "black") +
geom_label(stat = "count", aes(label = ..count..,y = ..count..)) +
labs(x = "Calendar Year", y = "Number of Homicides", title = "Number of homicides in London by Year, 2008-2019")+
theme_bw()
View(mmap7)
View(mmap6)
View(mmap6_sum)
ggplot(mmap6_sum, aes(x = borough, y=rate_per_100K) +
geom_bar(stat='count', fill = "green4", color = "black") +
geom_label(stat = "count", aes(label = ..count..,y = ..count..)) +
labs(x = "Borough, y = "Rate per 100,000 population", title = "Borough homicides per 100,000 2008-2019")+
ggplot(mmap6_sum, aes(x = borough, y=count +
geom_bar(stat='count', fill = "green4", color = "black") +
geom_label(stat = "count", aes(label = ..count..,y = ..count..)) +
labs(x = "Borough", y = "Rate per 100,000 population", title = "Borough homicides per 100,000 2008-2019")+
theme_bw()
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% summarise(count = n(), population = population, homicide_rate = count/population/100000) %>% distinct()
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% summarise(count = n(), population = population, homicide_rate = count/population/100000) %>% distinct()
View(mmap6_sum)
ggplot(mmap6_sum, aes(x = borough, y=homicide_rate) +
geom_bar(stat='homicide_rate', fill = "green4", color = "black") +
geom_label(stat = "homicide_rate", aes(label = ..homicide_rate..,y = ..homicide_rate..)) +
labs(x = "Borough", y = "Homicide Rate", title = "Borough homicide Rate per 100,000 2008-2019")+
theme_bw()
ggplot(mmap6_sum, aes(x = borough, y=homicide_rate)+
ggplot(mmap6_sum, aes(x = borough, y=homicide_rate))+
geom_bar(fill = "green4", color = "black")
str(mmap6_sum)
mmap9 <- as.data.frame(mmap6_sum)
View(mmap9)
ggplot(mmap9, aes(x = borough, y=homicide_rate))+
geom_bar(fill = "green4", color = "black")
ggplot(mmap9, aes(x = borough))+
geom_bar(geom_bar(stat='count', fill = "green4", color = "black")
ggplot(mmap7, aes(x = ageGroup)) +
ggplot(mmap7, aes(x = as.factor(year))) +
geom_bar(stat='count', fill = "green4", color = "black") +
geom_label(stat = "count", aes(label = ..count..,y = ..count..)) +
labs(x = "Calendar Year", y = "Number of Homicides", title = "Number of homicides in London by Year, 2008-2019")+
theme_bw()
ggplot(mmap7, aes(x = ageGroup)) +
geom_bar(stat='count', fill = "green4", color = "black") +
geom_label(stat = "count", aes(label = ..count..,y = ..count..)) +
labs(x = "Age Group", y = "Number of Homicides", title = "Number of homicides in London by victim age group, 2008-2019")+
coord_flip()+
theme_bw()
mmap10 <- mmap9 %>% select(borough, homicide_rate)
View(mmap10)
ggplot(mmap10, aes(x = homicide_rate)) +
geom_bar(stat='count', fill = "green4", color = "black") +
geom_label(stat = "count", aes(label = ..count..,y = ..count..)) +
labs(x = "Borough", y = "Homicide Rate", title = "Homicide Rate by Borough, 2008-2019")+
theme_bw()
ggplot(mmap10, aes(x = homicide_rate*100,000)) +
geom_bar(stat='count', fill = "green4", color = "black") +
geom_label(stat = "count", aes(label = ..count..,y = ..count..)) +
labs(x = "Borough", y = "Homicide Rate", title = "Homicide Rate by Borough, 2008-2019")+
theme_bw()
ggplot(mmap10, aes(x = homicide_rate)) +
geom_bar(stat='count', fill = "green4", color = "black") +
geom_label(stat = "count", aes(label = ..count..,y = ..count..)) +
labs(x = "Borough", y = "Homicide Rate", title = "Homicide Rate by Borough, 2008-2019")+
theme_bw()
ggplot(mmap10, aes(x = homicide_rate)) +
geom_bar(stat='count', fill = "green4", color = "black") +
labs(x = "Borough", y = "Homicide Rate", title = "Homicide Rate by Borough, 2008-2019")+
theme_bw()
ggplot(mmap10, aes(x = borough)) +
geom_bar(stat='count', fill = "green4", color = "black") +
labs(x = "Borough", y = "Homicide Rate", title = "Homicide Rate by Borough, 2008-2019")+
theme_bw()
View(mmap7)
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% summarise(count = n(), population = population, homicide_rate = count*100,000/population %>% distinct()
mmap9 <- as.data.frame(mmap6_sum)
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% summarise(count = n(), population = population, homicide_rate = (count*100,000)/population %>% distinct()
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% summarise(count = n(), population = population, homicide_rate = (count*100000)/population %>% distinct()
mmap9 <- as.data.frame(mmap6_sum)
View(mmap6_sum)                                                                                       View
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% summarise(count = n(), population = population, homicide_rate = (count/population)*100000 %>% distinct()
View(mmap6_sum)                                                                                     View
View(mmap6_sum)
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% summarise(count = n(), population = population, homicide_rate = count/population %>% distinct()
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% summarise(count = n(), population = population, homicide_rate = count/population
View(mmap6)
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% mutate(count = n(), population = population, homicide_rate = count/population %>% distinct()
View(mmap6_sum)
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% mutate(count = n(), population = population, homicide_rate = count/population %>% distinct()
View(mmap6)
mmap6 <- left_join(mmap5, boroughpop, by = "borough")
View(mmap6)
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% mutate(count = n(), population = population, homicide_rate = count/population %>% distinct()
View(mmap6_sum)
str(mmap6_sum)
mmap9 <- as.data.frame(mmap6_sum)
mmap10 <- mmap9 %>% select(borough, homicide_rate)
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% mutate(count = n(), population = population, homicide_rate = (count/population)*100,000 %>% distinct()
mmap9 <- as.data.frame(mmap6_sum)
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% mutate(count = n(), population = population, homicide_rate = count/population %>% distinct()
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% summarise(count = n(), population = population, homicide_rate = count/population %>% distinct()
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% mutate(count = n(), population = population, homicide_rate = count/population %>% distinct()
mmap9 <- as.data.frame(mmap6_sum)
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% mutate(count = n(), population = population, homicide_rate = count/population) %>% distinct()
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% mutate(count = n(), population = population, homicide_rate = (count*100000)/population) %>% distinct()
mmap9 <- as.data.frame(mmap6_sum)
mmap10 <- mmap9 %>% select(borough, homicide_rate)
View(mmap10)
View(mmap10)
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% mutate(count = n(), population = population, homicide_rate = (count*100000)/11/population) %>% distinct()
mmap9 <- as.data.frame(mmap6_sum)
mmap10 <- mmap9 %>% select(borough, homicide_rate)
View(mmap10)
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% mutate(count = n(), population = population, homicide_rate = round(count*100000)/11/population),2) %>% distinct()
mmap6_sum <- mmap6 %>% select(borough, population) %>% group_by(borough) %>% mutate(count = n(), population = population, homicide_rate = (count*100000)/11/population) %>% distinct()
mmap9 <- as.data.frame(mmap6_sum)
mmap10 <- mmap9 %>% select(borough, homicide_rate)
View(mmap10)
ggplot(mmap10, aes(x = borough)) +
geom_bar(stat='count', fill = "green4", color = "black") +
labs(x = "Borough", y = "Homicide Rate", title = "Homicide Rate by Borough, 2008-2019")+
theme_bw()
ggplot(mmap10, aes(x = borough)) +
geom_bar(stat='identity', fill = "green4", color = "black") +
labs(x = "Borough", y = "Homicide Rate", title = "Homicide Rate by Borough, 2008-2019")+
theme_bw()
ggplot(mmap10, aes(x = borough, y=homicide_rate)) +
geom_bar(stat='count', fill = "green4", color = "black") +
labs(x = "Borough", y = "Homicide Rate", title = "Homicide Rate by Borough, 2008-2019")+
theme_bw()
ggplot(mmap10, aes(x = borough, y=homicide_rate)) +
geom_bar(stat='homicide_rate', fill = "green4", color = "black") +
labs(x = "Borough", y = "Homicide Rate", title = "Homicide Rate by Borough, 2008-2019")+
theme_bw()
ggplot(mmap10, aes(x = borough, y=homicide_rate)) +
geom_bar( fill = "green4", color = "black") +
labs(x = "Borough", y = "Homicide Rate", title = "Homicide Rate by Borough, 2008-2019")+
theme_bw()
ggplot(mmap9, aes(x = borough))+
geom_bar(geom_bar(stat='count', fill = "green4", color = "black")
geom_label(stat = "count", aes(label = ..count..,y = ..count..)) +
ggplot(mmap10, aes(x = borough, y=homicide_rate)) +
geom_bar( fill = "green4", color = "black") +
labs(x = "Borough", y = "Homicide Rate", title = "Homicide Rate by Borough, 2008-2019")+
theme_bw()
qplot(x = borough, y=homicide_rate, data= mmap10, geom = barplot())
qplot(x = "borough", y="homicide_rate", data= mmap10, geom = barplot)
qplot(x = borough, y=homicide_rate, data= mmap10, geom = barplot)
qplot(x = borough, y=homicide_rate, data= mmap10, geom = "bar")
qplot(x = borough, data= mmap10, geom = "bar")
qplot(x = homicide_rate, data= mmap10, geom = "bar", coord_flip())
qplot(x = homicide_rate, data= mmap10, geom = "bar")
View(mmap10)
mmap10$homicide_rate <- round(mmap10$homicide_rate, 2)
View(mmap10)
ggplot(quakes.agg, aes(x=borough, y=homicide_rate)) +
+   geom_bar(stat="identity")
ggplot(mmap10, aes(x=borough, y=homicide_rate)) +
+   geom_bar(stat="identity")
qplot(mmap10, aes(x=borough, y=homicide_rate)) +
+   geom_bar(stat="identity")
ggplot(mmap10, aes(x=borough, y=homicide_rate)) +
+   geom_bar(stat="identity", fill="green4", color = "black")+
theme_bw()
ggplot(mmap10, aes(x=borough, y=homicide_rate)) +
geom_bar(stat="identity", fill="green4", color = "black")+
theme_bw()
ggplot(mmap10, aes(x=borough, y=homicide_rate)) +
geom_bar(stat="identity", fill="green4", color = "black")+
geom_label(stat = "identity", aes(label = ..count..,y = ..count..)) +
labs(x = "Borough", y = "Homicide Rate", title = "Borough homicide Rate per 100,000 2008-2019")+
theme_bw()
ggplot(mmap10, aes(x=borough, y=homicide_rate)) +
geom_bar(stat="identity", fill="green4", color = "black")+
geom_label(stat = "count", aes(label = ..count..,y = ..count..)) +
labs(x = "Borough", y = "Homicide Rate", title = "Borough homicide Rate per 100,000 2008-2019")+
theme_bw()
ggplot(mmap10, aes(x=borough, y=homicide_rate)) +
geom_bar(stat="identity", fill="green4", color = "black")+
geom_label(stat = "count", aes(label = ..count..,y = ..homicide_rate..)) +
labs(x = "Borough", y = "Homicide Rate", title = "Borough homicide Rate per 100,000 2008-2019")+
theme_bw()
ggplot(mmap10, aes(x=borough, y=homicide_rate)) +
geom_bar(stat="identity", fill="green4", color = "black")+
geom_label(stat = "count", aes(label = ..count..,y = .."homicide_rate"..)) +
ggplot(mmap10, aes(x=borough, y=homicide_rate)) +
geom_bar(stat="identity", fill="green4", color = "black")+
geom_label(stat = "count", aes(label = ..homicide_rate..,y = ..count..)) +
labs(x = "Borough", y = "Homicide Rate", title = "Borough homicide Rate per 100,000 2008-2019")+
theme_bw()
ggplot(mmap10, aes(x=borough, y=homicide_rate)) +
geom_bar(stat="identity", fill="green4", color = "black")+
geom_label(aes(label = homicide_rate, hjust = 1.2))+
labs(x = "Borough", y = "Homicide Rate", title = "Borough homicide Rate per 100,000 2008-2019")+
theme_bw()
ggplot(mmap10, aes(x=borough, y=homicide_rate)) +
geom_bar(stat="identity", fill="green4", color = "black")+
geom_label(aes(label = homicide_rate, vjust = 1.2))+
labs(x = "Borough", y = "Homicide Rate", title = "Borough homicide Rate per 100,000 2008-2019")+
theme_bw()
ggplot(mmap10, aes(x=borough, y=homicide_rate)) +
geom_bar(stat="identity", fill="green4", color = "black")+
geom_label(aes(label = homicide_rate, hjust = 1.2))+
coord_flip()+
labs(x = "Borough", y = "Homicide Rate", title = "Borough homicide Rate per 100,000 2008-2019")+
theme_bw()
ggplot(mmap10, aes(x=borough, y=homicide_rate)) +
geom_bar(stat="identity", fill="green4", color = "black")+
geom_label(aes(label = homicide_rate, hjust = 1.5))+
coord_flip()+
labs(x = "Borough", y = "Homicide Rate", title = "Borough homicide Rate per 100,000 2008-2019")+
theme_bw()
ggplot(mmap10, aes(x=borough, y=homicide_rate)) +
geom_bar(stat="identity", fill="green4", color = "black")+
geom_label(aes(label = homicide_rate, hjust = 0))+
coord_flip()+
labs(x = "Borough", y = "Homicide Rate", title = "Borough homicide Rate per 100,000 2008-2019")+
theme_bw()
ggplot(mmap10, aes(x=borough, y=homicide_rate)) +
geom_bar(stat="identity", fill="green4", color = "black")+
geom_label(aes(label = homicide_rate, hjust = 0.2))+
coord_flip()+
labs(x = "Borough", y = "Homicide Rate", title = "Borough homicide Rate per 100,000 2008-2019")+
theme_bw()
ggplot(mmap10, aes(x=borough, y=homicide_rate)) +
geom_bar(stat="identity", fill="green4", color = "black")+
geom_label(aes(label = homicide_rate, hjust = 0.2))+
coord_flip()+
labs(x = "Borough", y = "Homicide Rate", title = "Borough average annual homicide Rate per 100,000 2008-2019")+
theme_bw()+
ggsave("homicide_rate.pdf", height = 5, width = 7)
ggplot(mmap10, aes(x=borough, y=homicide_rate)) +
geom_bar(stat="identity", fill="green4", color = "black")+
geom_label(aes(label = homicide_rate, hjust = 0.2))+
coord_flip()+
labs(x = "Borough", y = "Homicide Rate", title = "Borough average annual homicide Rate per 100,000 2008-2019")+
theme_bw()+
ggsave("homicide_rate.pdf", height = 8, width = 8)
ggplot(mmap10, aes(x=borough, y=homicide_rate)) +
geom_bar(stat="identity", fill="green4", color = "black")+
geom_label(aes(label = homicide_rate, hjust = 0.2))+
coord_flip()+
labs(x = "Borough", y = "Homicide Rate", title = "Borough average annual homicide Rate per 100,000 2008-2019")+
theme_bw()+
ggsave("homicide_rate.pdf", height = 8, width = 8)
mmap10 <- mmap10 %>% arrange(desc(mmap10$homicide_rate))
View(mmap10)
ggplot(mmap10, aes(x=borough, y=homicide_rate)) +
geom_bar(stat="identity", fill="green4", color = "white")+
geom_label(aes(label = homicide_rate, hjust = 0.2))+
coord_flip()+
labs(x = "Borough", y = "Homicide Rate", title = "Borough average annual homicide Rate per 100,000 2008-2019")+
theme_bw()+
ggsave("homicide_rate.pdf", height = 8, width = 8)
mmap10 <- mmap10 %>% arrange(desc(mmap10$homicide_rate))
View(mmap10)
View(boroughpop)
install.packages("sp")
install.packages("sp")
install.packages("sp")
install.packages("sp")
library(knitr)
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyr)
library(tibble)
library(stringr)
library(lubridate)
library(leaflet)
library(leaflet.extras)
library(tidyverse)
library(reshape)
knitr::opts_chunk$set(message=FALSE, warning=FALSE, error=FALSE)
library(sp)
knitr::opts_chunk$set(message=FALSE, warning=FALSE, error=FALSE)
install.packages("dplyr")
install.packages("tidyr")
install.packages("lubridate")
knitr::opts_chunk$set(message=FALSE, warning=FALSE, error=FALSE)
detach("package:sp", unload = TRUE)
install.packages("sp", dependencies=TRUE)
install.packages("dplyr")
install.packages("tidyr")
knitr::opts_chunk$set(message=FALSE, warning=FALSE, error=FALSE)
detach("package:sp", unload = TRUE)
install.packages("sp", dependencies=TRUE)
library(knitr)
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyr)
library(tibble)
library(stringr)
library(lubridate)
library(leaflet)
library(leaflet.extras)
library(tidyverse)
library(reshape)
getwd()
getwd()
name: "London-Homicides"
output_dir: docs
